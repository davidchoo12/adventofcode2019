code = '109,424,203,1,21102,11,1,0,1106,0,282,21102,18,1,0,1106,0,259,1201,1,0,221,203,1,21102,31,1,0,1106,0,282,21101,38,0,0,1106,0,259,21002,23,1,2,22102,1,1,3,21101,1,0,1,21102,57,1,0,1105,1,303,2102,1,1,222,20101,0,221,3,20101,0,221,2,21102,259,1,1,21101,80,0,0,1106,0,225,21101,0,44,2,21102,91,1,0,1105,1,303,1201,1,0,223,20101,0,222,4,21101,0,259,3,21102,225,1,2,21101,225,0,1,21102,118,1,0,1105,1,225,21002,222,1,3,21101,100,0,2,21101,133,0,0,1105,1,303,21202,1,-1,1,22001,223,1,1,21101,148,0,0,1106,0,259,2102,1,1,223,20102,1,221,4,21002,222,1,3,21102,1,12,2,1001,132,-2,224,1002,224,2,224,1001,224,3,224,1002,132,-1,132,1,224,132,224,21001,224,1,1,21102,1,195,0,106,0,108,20207,1,223,2,21002,23,1,1,21102,-1,1,3,21101,0,214,0,1105,1,303,22101,1,1,1,204,1,99,0,0,0,0,109,5,2102,1,-4,249,21201,-3,0,1,22101,0,-2,2,22101,0,-1,3,21101,0,250,0,1105,1,225,22102,1,1,-4,109,-5,2106,0,0,109,3,22107,0,-2,-1,21202,-1,2,-1,21201,-1,-1,-1,22202,-1,-2,-2,109,-3,2106,0,0,109,3,21207,-2,0,-1,1206,-1,294,104,0,99,21202,-2,1,-2,109,-3,2105,1,0,109,5,22207,-3,-4,-1,1206,-1,346,22201,-4,-3,-4,21202,-3,-1,-1,22201,-4,-1,2,21202,2,-1,-1,22201,-4,-1,1,22102,1,-2,3,21101,0,343,0,1105,1,303,1105,1,415,22207,-2,-3,-1,1206,-1,387,22201,-3,-2,-3,21202,-2,-1,-1,22201,-3,-1,3,21202,3,-1,-1,22201,-3,-1,2,21201,-4,0,1,21101,0,384,0,1106,0,303,1106,0,415,21202,-4,-1,-4,22201,-4,-3,-4,22202,-3,-2,-2,22202,-2,-4,-4,22202,-3,-2,-3,21202,-4,-1,-2,22201,-3,-2,1,22102,1,1,-4,109,-5,2106,0,0'

def runcode(code_str, input_handler, output_handler):
  x = list(map(int, code_str.split(',')))
  x += [0] * 10 * len(x)
  i = 0
  relative_base = 0
  while i < len(x):
    op = x[i] % 100
    if op == 99:
      return
    mode1 = int(x[i] / 100 % 10)
    param1 = x[x[i+1]] if mode1 == 0 else x[i+1] if mode1 == 1 else x[relative_base + x[i+1]]
    if op == 3:
      input_val = input_handler()
      if mode1 == 2:
        x[relative_base + x[i+1]] = input_val
      else:
        x[x[i+1]] = input_val
      i += 2
    elif op == 4:
      output_handler(param1)
      i += 2
    elif op == 9:
      relative_base += param1
      i += 2
    else:
      mode2 = int(x[i] / 1000 % 10)
      param2 = x[x[i+2]] if mode2 == 0 else x[i+2] if mode2 == 1 else x[relative_base + x[i+2]]
      if op == 5:
        if param1:
          i = param2
        else:
          i += 3
      elif op == 6:
        if not param1:
          i = param2
        else:
          i += 3
      else:
        mode3 = int(x[i] / 10000 % 10)
        param3 = x[x[i+3]] if mode3 == 0 else x[i+3] if mode3 == 1 else x[relative_base + x[i+3]]
        if op == 1:
          if mode3 == 2:
            x[relative_base + x[i+3]] = param1 + param2
          else:
            x[x[i+3]] = param1 + param2
          i += 4
        elif op == 2:
          if mode3 == 2:
            x[relative_base + x[i+3]] = param1 * param2
          else:
            x[x[i+3]] = param1 * param2
          i += 4
        elif op == 7:
          if mode3 == 2:
            x[relative_base + x[i+3]] = 1 if param1 < param2 else 0
          else:
            x[x[i+3]] = 1 if param1 < param2 else 0
          i += 4
        elif op == 8:
          if mode3 == 2:
            x[relative_base + x[i+3]] = 1 if param1 == param2 else 0
          else:
            x[x[i+3]] = 1 if param1 == param2 else 0
          i += 4

x = 0
y = 0
input_x = True
def input_handler():
  global input_x
  if input_x:
    input_x = False
    return x
  else:
    input_x = True
    return y

outputs = []
def output_handler(output):
  # print(output)
  outputs.append(output)

for i in range(50):
  # outputs.append([])
  for j in range(50):
    y = i
    x = j
    runcode(code, input_handler, output_handler)

graph = '\n'.join([''.join([str(o) for o in outputs[i*50:i*50 + 50]]) for i in range(50)])
print(graph)
print(sum(outputs))
# output
# 10000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00010000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000010000000000000000000000000000000000000000000
# 00000001100000000000000000000000000000000000000000
# 00000000010000000000000000000000000000000000000000
# 00000000001100000000000000000000000000000000000000
# 00000000000011000000000000000000000000000000000000
# 00000000000001100000000000000000000000000000000000
# 00000000000000111000000000000000000000000000000000
# 00000000000000001110000000000000000000000000000000
# 00000000000000000111000000000000000000000000000000
# 00000000000000000011110000000000000000000000000000
# 00000000000000000000111100000000000000000000000000
# 00000000000000000000011110000000000000000000000000
# 00000000000000000000000111100000000000000000000000
# 00000000000000000000000011111000000000000000000000
# 00000000000000000000000001111100000000000000000000
# 00000000000000000000000000011111000000000000000000
# 00000000000000000000000000001111110000000000000000
# 00000000000000000000000000000111111000000000000000
# 00000000000000000000000000000001111110000000000000
# 00000000000000000000000000000000111111000000000000
# 00000000000000000000000000000000001111110000000000
# 00000000000000000000000000000000000111111100000000
# 00000000000000000000000000000000000011111110000000
# 00000000000000000000000000000000000000111111100000
# 00000000000000000000000000000000000000011111111000
# 00000000000000000000000000000000000000001111111100
# 00000000000000000000000000000000000000000011111111
# 00000000000000000000000000000000000000000001111111
# 00000000000000000000000000000000000000000000011111
# 00000000000000000000000000000000000000000000001111
# 00000000000000000000000000000000000000000000000111
# 00000000000000000000000000000000000000000000000001
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000
# 147